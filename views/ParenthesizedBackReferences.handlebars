<h2>Parenthesized Back References</h2>

<h3 class="section">5.7 Back-references and Subexpressions</h3>
<a name="index-subexpression"></a>
<a name="index-back_002dreference"></a>

<p><em>back-references</em> are regular expression commands which refer to a
previous part of the matched regular expression.  Back-references are
specified with backslash and a single digit (e.g. &lsquo;<samp>\1</samp>&rsquo;).  The
part of the regular expression they refer to is called a
<em>subexpression</em>, and is designated with parentheses.
</p>
<p>Back-references and subexpressions are used in two cases: in the
regular expression search pattern, and in the <var>replacement</var> part
of the <code>s</code> command (see <a href="Regexp-Addresses.html#Regexp-Addresses">Regular
Expression Addresses</a> and <a href="The-_0022s_0022-Command.html#The-_0022s_0022-Command">The &quot;s&quot; Command</a>).
</p>
<p>In a regular expression pattern, back-references are used to match
the same content as a previously matched subexpression.  In the
following example, the subexpression is &lsquo;<samp>.</samp>&rsquo; - any single
character (being surrounded by parentheses makes it a
subexpression). The back-reference &lsquo;<samp>\1</samp>&rsquo; asks to match the same
content (same character) as the sub-expression.
</p>
<p>The command below matches words starting with any character,
followed by the letter &lsquo;<samp>o</samp>&rsquo;, followed by the same character as the
first.
</p>
<div class="example">
<pre class="example">$ sed -E -n '/^(.)o\1$/p' /usr/share/dict/words
bob
mom
non
pop
sos
tot
wow
</pre></div>

<p>Multiple subexpressions are automatically numbered from
left-to-right. This command searches for 6-letter
palindromes (the first three letters are 3 subexpressions,
followed by 3 back-references in reverse order):
</p>
<div class="example">
<pre class="example">$ sed -E -n '/^(.)(.)(.)\3\2\1$/p' /usr/share/dict/words
redder
</pre></div>

<p>In the <code>s</code> command, back-references can be
used in the <var>replacement</var> part to refer back to subexpressions in
the <var>regexp</var> part.
</p>
<p>The following example uses two subexpressions in the regular
expression to match two space-separated words. The back-references in
the <var>replacement</var> part prints the words in a different order:
</p>
<div class="example">
<pre class="example">$ echo &quot;James Bond&quot; | sed -E 's/(.*) (.*)/The name is \2, \1 \2./'
The name is Bond, James Bond.
</pre></div>


<p>When used with alternation, if the group does not participate in the
match then the back-reference makes the whole match fail.  For
example, &lsquo;<samp>a(.)|b\1</samp>&rsquo; will not match &lsquo;<samp>ba</samp>&rsquo;.  When multiple
regular expressions are given with <samp>-e</samp> or from a file
(&lsquo;<samp>-f <var>file</var></samp>&rsquo;), back-references are local to each expression.
</p>
